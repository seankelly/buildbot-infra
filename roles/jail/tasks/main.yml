---
- name: Configure jail defaults
  tags: jail
  blockinfile:
    dest: "{{ jail_conf_file }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK Jail defaults"
    create: yes
    state: present
    block: |
      exec.start = "/bin/sh /etc/rc";
      exec.stop = "/bin/sh /etc/rc.shutdown";
      exec.clean;
      mount.devfs;

- name: create jail script
  tags: jail
  copy:
    src: create_jail.py
    dest: "/usr/local/bin/create_jail.py"

- name: create jail
  tags: jail
  command: "python2 /usr/local/bin/create_jail.py  {{ ezjail_default_flavour }} {{ name }} {{ hosts_ips[name] }} {{ internal_network }} {{ external_network}} {{ internet_visible }} '{{internal_if}}' '{{ external_if }}'"
  args:
    creates: "{{ ezjail_conf_dir }}/{{ name }}"
  register: jail_created

- name: Configure jail
  tags: jail
  blockinfile:
    dest: "{{ jail_conf_file }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ name }}"
    create: yes
    state: present
    block: |
      {{ name }} {
          host.hostname = "{{ hostname }}";
          path = "";
          ip4.addr = "";
          mount.fstab = "";
          exec.consolelog = "";
      }

- name: set jail's hostname
  tags: jail
  lineinfile:
    dest: "{{ ezjail_conf_dir }}/{{ name }}"
    regexp: "^export jail_{{ name }}_hostname="
    line: 'export jail_{{ name }}_hostname="{{ hostname }}"'
  when: jail_created is changed

- name: start jail for bootstrapping
  tags: jail
  command: "ezjail-admin start {{ name }}"
  when: jail_created is changed

# pf needs to account for that new jail
- name: Restart pf
  tags: jail
  service:
    name: pf
    state: restarted
  when: jail_created is changed

- name: Copy some host configuration files
  tags: jail
  command: "cp '/etc/{{ item }}' '{{ ezjail_jaildir }}/{{ name }}/etc/{{ item }}'"
  with_items:
  - resolv.conf

- name: Copy some ssh authorized_keys
  tags: jail
  command: "cp -rf '/home/vagrant/.ssh' '{{ ezjail_jaildir }}/{{ name }}/root/'"
  when: is_vagrant

- name: prepare bootstrap script
  tags: jail
  template:
    src: "templates/run-once"
    dest: "{{ ezjail_jaildir }}/{{ name }}/root/run-once"
    mode: "0700"
  when: jail_created is changed

- name: execute bootstrap script {{ name }}
  tags: jail
  command: "jexec {{ name }} root/run-once"
  args:
    creates: "{{ ezjail_conf_dir }}/{{ name }}/root/.run-once"
  register: debug
  when: jail_created is changed

- name: print output of bootstrap script
  tags: jail
  debug:
    var: debug.stdout_lines
  when: jail_debug

- name: remove bootstrap script
  tags: jail
  file:
    path: "{{ ezjail_jaildir }}/{{ name }}/root/run-once"
    state: absent
  when: jail_created is changed

- name: check if the jail is running
  tags: jail
  shell: "jls -j {{ name }} > /dev/null 2>&1"
  ignore_errors: True
  register: jail_running

- name: start the jail
  tags: jail
  command: "ezjail-admin start {{ name }}"
  when: jail_running is failed

# vim:ts=2:sw=2:noai:nosi
